# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    #- name: Install dependencies
    #  run: |
    #    python -m pip install --upgrade pip
    #    pip install flake8 pytest numpy
    #    if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Install dependencies
      run: |
        export PATH="/usr/share/miniconda/bin:$PATH"
        conda config --set always_yes yes --set changeps1 no
        conda update -q conda
        conda info -a
        conda create -q -n env python=${{ matrix.python-version }} astropy cartopy ephem healpy pandas -c conda-forge
        source activate env
        pip install flake8 pytest
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest

#        wget --quiet http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh
#        bash miniconda.sh -b -p $HOME/miniconda
#        export PATH="$HOME/miniconda/bin:$PATH"
